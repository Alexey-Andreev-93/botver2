// –ò–º–ø–æ—Ä—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
import * as dotenv from "dotenv";
dotenv.config();

import { Telegraf } from "telegraf";
import { initDatabase } from "./database";
import { Logger } from "./utils/logger";
import { BotService } from "./services/BotService";
import { commandHandlers } from "./handlers/commandHandlers";
import { hearsHandlers } from "./handlers/hearsHandlers";
import { callbackHandlers } from "./handlers/callbackHandlers";
import { textHandlers } from "./handlers/textHandlers";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
const BOT_TOKEN = process.env.BOT_TOKEN || "";
if (BOT_TOKEN === "") {
  Logger.error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞!");
  process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
bot.start(commandHandlers.start);
bot.command("id", commandHandlers.id);
bot.command("orders", commandHandlers.orders);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
bot.hears("üìã –ú–µ–Ω—é", hearsHandlers.menu);
bot.hears("üõí –ö–æ—Ä–∑–∏–Ω–∞", hearsHandlers.cart);
bot.hears("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", hearsHandlers.contacts);
bot.hears("‚ùì –ü–æ–º–æ—â—å", hearsHandlers.help);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback-–∫–Ω–æ–ø–æ–∫
bot.action(/add_(\d+)/, (ctx) => callbackHandlers.addItem(ctx, ctx.match));
bot.action("view_cart", callbackHandlers.viewCart);
bot.action("checkout", callbackHandlers.checkout);
bot.action("clear_cart", callbackHandlers.clearCart);
bot.action("add_more", callbackHandlers.addMore);
bot.action("back_to_menu", callbackHandlers.backToMenu);
bot.action("ignore", callbackHandlers.ignore);

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–∞
bot.on("text", textHandlers.processText);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.catch((error, ctx) => {
  Logger.error("–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ –±–æ—Ç–∞:", error);
  ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
});

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async function startBot() {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await initDatabase();
    Logger.success("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞");

    // –ó–∞—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await bot.launch();
    Logger.success("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!");
    
    console.log("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:");
    console.log("‚Ä¢ /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é");
    console.log("‚Ä¢ /id - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π Telegram ID");
    console.log("‚Ä¢ /orders - –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)");
    console.log("\n‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏");
    console.log("‚úÖ –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");
    
  } catch (error) {
    Logger.error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
startBot();

// –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
process.once("SIGINT", () => {
  Logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
  bot.stop("SIGINT");
  process.exit(0);
});

process.once("SIGTERM", () => {
  Logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...");
  bot.stop("SIGTERM");
  process.exit(0);
});